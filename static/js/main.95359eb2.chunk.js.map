{"version":3,"sources":["components/Header/Header.jsx","components/CitySelect/CitySelect.jsx","components/Card/SmallCard/SmallCard.jsx","components/Loader/Loader.js","components/CitySelect/CitySelectContainer.js","api/api.js","components/Buttons/BackButton.jsx","components/Card/LargeCard/LargeCard.jsx","components/OopsPage/OopsPage.jsx","common/cities.js","common/transformPressure.js","components/App/App.js","serviceWorker.js","index.js","components/Card/SmallCard/SmallCard.module.scss","components/Card/LargeCard/LargeCard.module.scss","components/Header/Header.module.scss","accets/logo.png","components/Loader/Loader.module.scss","components/Buttons/BackButton.module.scss","components/OopsPage/OopsPage.module.scss","components/App/App.module.scss"],"names":["Header","className","style","header","img__container","src","logo","alt","title__container","useStyles","makeStyles","theme","option","fontSize","marginRight","root","color","CitySelect","props","classes","Autocomplete","onSelect","select","onSelectHandler","target","value","id","width","margin","options","cities","autoHighlight","getOptionLabel","city","nameRu","renderOption","Fragment","isoCode","String","fromCodePoint","toUpperCase","renderInput","params","TextField","common","label","variant","inputProps","autoComplete","SmallCard","cityData","container","degrees","Math","round","data","main","temp","temp__range__container","temp__range__min","temp_min","temp__range__max","temp_max","to","display","marginLeft","spacing","CircularIndeterminate","loader__container","CircularProgress","SelectCityContainer","setSelectedCityData","useState","isFetching","selectedCityId","isError","state","setState","useEffect","axios","get","then","res","filter","catch","err","console","log","selectedCity","BackButton","url","link","LargeCard","name","feelsLike","weatherDescription","pressure","humidity","windSpeed","title","temp__container","current__temp","description","OopsPage","oops","transformPressure","App","app","exact","path","render","CitySelectContainer","feels_like","weather","wind","speed","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.95359eb2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport logo from '../../accets/logo.png'\r\nimport style from './Header.module.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={style.header}>\r\n      <div className={style.img__container}>\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <div className={style.title__container}>\r\n        <h3>Weather</h3>\r\n      </div>\r\n      <div></div>   \r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode\r\n        .toUpperCase()\r\n    : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 16,\r\n    },\r\n  },\r\n  root: {\r\n    '& > label': {\r\n      color: '#fff',\r\n    },\r\n    '& .MuiAutocomplete-popupIndicator': {\r\n      color: '#fff'\r\n    },\r\n    '& .MuiIconButton-root': {\r\n      color: '#fff'\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      color: '#fff',\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused': {\r\n      color: '#fff'\r\n    },\r\n  }\r\n}));\r\n\r\nfunction CitySelect(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Autocomplete\r\n      onSelect={(select) => props.onSelectHandler(select.target.value)}\r\n      id=\"country-select-demo\"\r\n      style={{ width: '80%', margin: 'auto'}}\r\n      options={props.cities}\r\n      classes={{\r\n        option: classes.option,\r\n      }}\r\n      autoHighlight\r\n      getOptionLabel={(city) => city.nameRu}\r\n      renderOption={(city) => (\r\n        <React.Fragment>\r\n          <span>{countryToFlag(city.nameRu)}</span>\r\n        </React.Fragment>\r\n      )}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          classes={{root: classes.root}}\r\n          common='white'\r\n          label=\"Выберите город\"\r\n          variant=\"outlined\"\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CitySelect;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './SmallCard.module.scss';\r\n\r\nconst SmallCard = ({cityData}) => {\r\n  if(!cityData) return <div>404</div>\r\n\r\n  return (\r\n    <div className={style.container}> \r\n      <h4>{cityData.nameRu}</h4>\r\n      <div className={style.degrees}>{Math.round(cityData.data.main.temp)}{'\\u00b0'}C</div>\r\n      <div className={style.temp__range__container}>\r\n        <div className={style.temp__range__min}>\r\n          <span>{Math.round(cityData.data.main.temp_min)}</span>\r\n          <span>min</span>\r\n        </div>\r\n        <div className={style.temp__range__max}>\r\n          <span>{Math.round(cityData.data.main.temp_max)}</span>\r\n          <span>max</span>\r\n        </div>\r\n      </div>\r\n      <Link to={'/largeCard'}>подробнее...</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nSmallCard.propTypes = {\r\n  cityData: PropTypes.exact({\r\n    data: PropTypes.shape({\r\n      base: PropTypes.string,\r\n      clouds: PropTypes.object,\r\n      cod: PropTypes.number,\r\n      coord: PropTypes.object,\r\n      dt: PropTypes.number,\r\n      id: PropTypes.number.isRequired,\r\n      main: PropTypes.shape({\r\n        feels_like: PropTypes.number.isRequired,\r\n        humidity: PropTypes.number.isRequired,\r\n        pressure: PropTypes.number.isRequired,\r\n        temp: PropTypes.number.isRequired,\r\n        temp_max: PropTypes.number.isRequired,\r\n        temp_min: PropTypes.number.isRequired,\r\n      }),\r\n      name: PropTypes.string.isRequired,\r\n      sys: PropTypes.object,\r\n      tymezone: PropTypes.number,\r\n      vizibility: PropTypes.number,\r\n      weather: PropTypes.arrayOf(PropTypes.object),\r\n      wind: PropTypes.shape({\r\n        deg: PropTypes.number,\r\n        speed: PropTypes.number.isRequired\r\n      })\r\n    }),\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    nameRu: PropTypes.string.isRequired,\r\n    timeRequest: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default SmallCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport style from './Loader.module.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={style.loader__container}>\r\n      <div className={classes.root}>\r\n        <CircularProgress color=\"secondary\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CitySelect from './CitySelect';\r\nimport SmallCard from '../Card/SmallCard/SmallCard';\r\nimport Loader from '../Loader/Loader';\r\nimport { getWeather } from '../../api/api';\r\n\r\nconst SelectCityContainer = ({cities, cityData, setSelectedCityData}) => {\r\n  const [state, setState] = useState({\r\n    isFetching: false,\r\n    selectedCityId: null,\r\n    isError: false\r\n  });\r\n\r\n  useEffect(() => {\r\n      if(state.selectedCityId) {\r\n        setState(state => ({...state, isFetching: true}))\r\n        getWeather(state.selectedCityId)\r\n          .then(res => {\r\n            const city = cities.filter(city => city.id === state.selectedCityId)[0];\r\n            city.data = res.data\r\n            setSelectedCityData(city)\r\n            setState(state => ({...state, isFetching: false}))\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            setState({selectedCityId: null, isFetching: false, isError: true});\r\n          })\r\n      }\r\n  }, [state.selectedCityId, cities])\r\n\r\n  const onSelectHandler = value => {\r\n    if(!value) return\r\n    const selectedCity = cities.filter(city => city.nameRu === value)[0];\r\n    if(selectedCity) {\r\n      setState(state => ({...state, selectedCityId: selectedCity.id}))\r\n    }\r\n  }\r\n\r\n  if(state.isFetching) {\r\n    return <Loader />\r\n  }\r\n\r\n  if(state.isError) {\r\n    return <Redirect to='oops' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CitySelect \r\n        onSelectHandler={onSelectHandler}\r\n        cities={cities} \r\n      />\r\n      {cityData !== null && <SmallCard cityData={cityData} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelectCityContainer.propTypes = {\r\n  cities: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setSelectedCityData: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SelectCityContainer;","import axios from 'axios';\r\n\r\nexport const getWeather = id => {\r\n  return axios.get(\r\n    `http://api.openweathermap.org/data/2.5/weather?id=${id}&lang=ru&units=metric&APPID=04396a6162f4cbfb469bf546ebfc29cb`\r\n  )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nimport style from './BackButton.module.scss';\r\n\r\nconst BackButton = ({url}) => {\r\n  return <Link to={url} className={style.link}><ArrowBackIosIcon /></Link>\r\n};\r\n\r\nBackButton.propTypes = {\r\n  url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BackButton;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackButton from '../../Buttons/BackButton'\r\nimport style from './LargeCard.module.scss';\r\n\r\nconst LargeCard = ({\r\n  name,\r\n  temp,\r\n  feelsLike,\r\n  weatherDescription,\r\n  pressure,\r\n  humidity,\r\n  windSpeed\r\n}) => {\r\n  return (\r\n    <div className={style.container}>\r\n      <BackButton url='/' />\r\n      <div className={style.title}>\r\n        <h3>{name}</h3>\r\n      </div>\r\n\r\n      <div className={style.temp__container}>\r\n        <div>\r\n          <span className={style.current__temp}>{Math.round(temp)}{'\\u00b0'}C</span>\r\n        </div>\r\n        <div>\r\n          <span>По ощущениям: {Math.round(feelsLike)}{'\\u00b0'}C</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={style.description}>{weatherDescription}</div>\r\n\r\n      <div>Давление: {pressure} мм. рт.</div>\r\n      <div>Влажность: {humidity}%</div>\r\n      <div>Ветер: {windSpeed} м\\с</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLargeCard.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  temp: PropTypes.number.isRequired,\r\n  feelsLike: PropTypes.number,\r\n  weatherDescription: PropTypes.string,\r\n  pressure: PropTypes.number,\r\n  humidity: PropTypes.number,\r\n  windSpeed: PropTypes.number\r\n}\r\n\r\nexport default LargeCard;","import React from 'react';\r\n\r\nimport BackButton from '../Buttons/BackButton';\r\nimport style from './OopsPage.module.scss';\r\n\r\nconst OopsPage = () => {\r\n  return (\r\n    <div className={style.oops}>\r\n      <BackButton url='/' />\r\n      <p>Sorry, something went wrong</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default OopsPage;","const cities = [\r\n  {name: 'Moscow', nameRu: 'Москва', id: 524894, data: null,},\r\n  {name: 'Saint Petersburg', nameRu: 'Санкт-Петербург', id: 498817, data: null,},\r\n  {name: 'Novosibirsk', nameRu: 'Новосибирск', id: 1496747, data: null,},\r\n  {name: 'Ekaterinburg', nameRu: 'Екатеринбург', id: 1486209, data: null,},\r\n  {name: 'Kazan', nameRu: 'Казань', id: 551487, data: null,},\r\n  {name: 'Nizhniy Novgorod', nameRu: 'Нижний Новгород', id: 520555, data: null,},\r\n  {name: 'Chelyabinsk', nameRu: 'Челябинск', id: 1508291, data: null,},\r\n  {name: 'Samara', nameRu: 'Самара', id: 499099, data: null,},\r\n  {name: 'Omsk', nameRu: 'Омск', id: 1496153, data: null,},\r\n  {name: 'Rostov-na-Donu', nameRu: 'Ростов-на-Дону', id: 501175, data: null,},\r\n  {name: 'Ufa', nameRu: 'Уфа', id: 479561, data: null,},\r\n  {name: 'Krasnoyarsk', nameRu: 'Красноярск', id: 1502026, data: null,},\r\n  {name: 'Voronezh', nameRu: 'Воронеж', id: 472045, data: null,},\r\n  {name: 'Perm', nameRu: 'Пермь', id: 511196, data: null,},\r\n  {name: 'Volgograd', nameRu: 'Волгоград', id: 472757, data: null,},\r\n  {name: 'London', nameRu: 'Лондон', id: 2643743, data: null,},\r\n  {name: 'Sochi', nameRu: 'Сочи', id: 491422, data: null,},\r\n  {name: 'Kaliningrad', nameRu: 'Калининград', id: 554234, data: null,},\r\n  {name: 'Vladivostok', nameRu: 'Владивосток', id: 2013348, data: null,},\r\n  {name: 'Washington', nameRu: 'Вашингтон', id: 4140963, data: null,},\r\n]\r\n\r\nexport default cities;","const transformPressure = pressure => {\r\n  return Math.round(pressure / 1.333)\r\n};\r\n\r\nexport default transformPressure;","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Header from '../Header/Header';\nimport CitySelectContainer from '../CitySelect/CitySelectContainer';\nimport LargeCard from '../Card/LargeCard/LargeCard';\nimport OopsPage from '../OopsPage/OopsPage';\nimport cities from '../../common/cities';\nimport transformPressure from '../../common/transformPressure';\nimport style from './App.module.scss';\n\nconst App = () => {\n  const [state, setState] = useState({\n    cityData: null,\n    isError: false\n  });\n\n  const setSelectedCityData = data => {\n    setState({cityData: data})\n  }\n\n  return (\n    <div className={style.app} >\n      <Header />\n      <Switch>\n        <Route \n          exact \n          path={'/'} \n          render={() => (\n            <CitySelectContainer \n              cities={cities} \n              setSelectedCityData={setSelectedCityData}\n              cityData={state.cityData} \n          />)} \n        />\n\n        <Route path={'/largeCard'}> \n          {state.cityData &&\n            <LargeCard \n              name={state.cityData.nameRu}\n              temp={state.cityData.data.main.temp}\n              feelsLike={state.cityData.data.main.feels_like}\n              weatherDescription={state.cityData.data.weather[0].description}\n              pressure={transformPressure(state.cityData.data.main.pressure)}\n              humidity={state.cityData.data.main.humidity}\n              windSpeed={state.cityData.data.wind.speed}\n            />\n          }\n        </Route>\n\n        <Route path={'/oops'} render={() => <OopsPage />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n \nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SmallCard_container__2ttBk\",\"degrees\":\"SmallCard_degrees__1D-hp\",\"temp__range__container\":\"SmallCard_temp__range__container__36OlO\",\"temp__range__max\":\"SmallCard_temp__range__max__3uGWf\",\"temp__range__min\":\"SmallCard_temp__range__min__1Kryg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LargeCard_container__10TZm\",\"title\":\"LargeCard_title__1CWPW\",\"description\":\"LargeCard_description__ZV2dL\",\"temp__container\":\"LargeCard_temp__container__Pxt1f\",\"current__temp\":\"LargeCard_current__temp__3DFJl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__uH48B\",\"img__container\":\"Header_img__container__2AWhl\"};","module.exports = __webpack_public_path__ + \"static/media/logo.28fc8b10.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader__container\":\"Loader_loader__container__aJiex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"BackButton_link__3K6Rr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"oops\":\"OopsPage_oops__ckbqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2NJTm\"};"],"sourceRoot":""}